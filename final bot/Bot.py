import telebot
from telebot import types
import sqlite3
from pyowm import OWM
from pyowm.utils.config import get_default_config

# –ò–º–ø–æ—Ä—Ç –æ–±—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö
config_dict = get_default_config()
config_dict['language'] = 'ru'
owm = OWM('a01bff19c34db14ebf253e1a3514b7c5', config_dict)
mgr = owm.weather_manager()


# –ñ–∏ –µ—Å—Ç—å
bot = telebot.TeleBot(token = '5076830432:AAGWOmMQSFtRj4zTC9uvVBlAXrM9Qve_r14')
print('–Ø –∂–∏–≤–æ–π')


# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö
def users_settings():
    db = sqlite3.connect('users_settings.db')
    cursor = db.cursor()

    query = """
    CREATE TABLE IF NOT EXISTS users(
        userid INTEGER,
        place TEXT,
        reset TEXT NOT NULL DEFAULT "08:00",
        font TEXT NOT NULL DEFAULT "–®—Ä–∏—Ñ—Ç 1",
        category TEXT NOT NULL DEFAULT "None"
    )
    """
    cursor.executescript(query)

# –ó–∞–ø—É—Å–∫ Data Base –¥–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö
users_settings()

# –•—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–æ–Ω–∞ –¥–ª—è –∫–∞—Ä—Ç–∏–Ω–∫–∏
def backgrounds():
    db = sqlite3.connect('users_settings.db')
    cursor = db.cursor()
    cursor.row_factory = sqlite3.Row
    
    query1 = """
    CREATE TABLE IF NOT EXISTS backgrounds(
    userid INTEGER,
    background BLOB
    )
    """

    cursor.executescript(query1)

# –ó–∞–ø—É—Å–∫ Data Base –¥–ª—è —Ñ–æ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
backgrounds()


# –û–Ω–æ–≤–Ω–∞—è –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
item0 = types.KeyboardButton('üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É')
item1 = types.KeyboardButton('üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏')
item2 = types.KeyboardButton('‚ñ∂ –ó–∞–ø—É—Å–∫')
item3 = types.KeyboardButton('‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏')
item4 = types.KeyboardButton('üìÑ –î–æ–±–∞–≤–∏—Ç—å –∑–∞–º–µ—Ç–∫—É')

markup = types.ReplyKeyboardMarkup(resize_keyboard = True).add(item2, item3, item4)



# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
item5 = types.KeyboardButton('üó∫ –£–∫–∞–∑–∞—Ç—å –≥–æ—Ä–æ–¥')
item6 = types.KeyboardButton('‚åöÔ∏è –£–∫–∞–∑–∞—Ç—å –≤—Ä–µ–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π')
item7 = types.KeyboardButton('üí¨ –ò–∑–º–µ–Ω–∏—Ç—å —à—Ä–∏—Ñ—Ç')
item8 = types.KeyboardButton('üñº –ò–∑–º–µ–Ω–∏—Ç—å —Ñ–æ–Ω')

markup_settings = types.ReplyKeyboardMarkup(resize_keyboard = True).add(item5, item6, item7, item8, item0)



# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≥–æ—Ä–æ–¥–æ–≤
city1 = types.KeyboardButton('–ú–æ—Å–∫–≤–∞')
city2 = types.KeyboardButton('–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥')
city3 = types.KeyboardButton('–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫')
city4 = types.KeyboardButton('–ï–∫–∞—Ç–µ—Ä–∏–Ω–≥–±—É—Ä–≥')
city5 = types.KeyboardButton('–ö–∞–∑–∞–Ω—å')
city6 = types.KeyboardButton('–ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥')
city7 = types.KeyboardButton('–ß–µ–ª—è–±–∏–Ω—Å–∫')
city8 = types.KeyboardButton('–û–º—Å–∫')
city9 = types.KeyboardButton('–°–∞–º–∞—Ä–∞')
city10 = types.KeyboardButton('–ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫')
city11 = types.KeyboardButton('–ü–µ—Ä–º—å')
city12 = types.KeyboardButton('–í–æ—Ä–æ–Ω–µ–∂')

markup_cities = types.ReplyKeyboardMarkup(resize_keyboard = True).add(city1, city2, city3, city4, city5, city6, city7, city8, city9, city10, city11, city12, item1)


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —É–∫–∞–∑–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
time1 = types.KeyboardButton('1:00')
time2 = types.KeyboardButton('2:00')
time3 = types.KeyboardButton('3:00')
time4 = types.KeyboardButton('4:00')
time5 = types.KeyboardButton('5:00')
time6 = types.KeyboardButton('6:00')
time7 = types.KeyboardButton('7:00')
time8 = types.KeyboardButton('8:00')
time9 = types.KeyboardButton('9:00')
time10 = types.KeyboardButton('10:00')
time11 = types.KeyboardButton('11:00')
time12 = types.KeyboardButton('12:00')



markup_time = types.ReplyKeyboardMarkup(resize_keyboard = True).add(time1, time2, time3, time4, time5, time6, time7, time8, time9, time10, time11, time12, item1)



# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —à—Ä–∏—Ñ—Ç–æ–≤
font1 = types.KeyboardButton('–®—Ä–∏—Ñ—Ç 1')
font2 = types.KeyboardButton('–®—Ä–∏—Ñ—Ç 2')
font3 = types.KeyboardButton('–®—Ä–∏—Ñ—Ç 3')
font4 = types.KeyboardButton('–®—Ä–∏—Ñ—Ç 4')
font5 = types.KeyboardButton('–®—Ä–∏—Ñ—Ç 5')
font6 = types.KeyboardButton('–®—Ä–∏—Ñ—Ç 6')
font7 = types.KeyboardButton('–®—Ä–∏—Ñ—Ç 7')
font8 = types.KeyboardButton('–®—Ä–∏—Ñ—Ç 8')
font9 = types.KeyboardButton('–®—Ä–∏—Ñ—Ç 9')
font10 = types.KeyboardButton('–®—Ä–∏—Ñ—Ç 10')
font11 = types.KeyboardButton('–®—Ä–∏—Ñ—Ç 11')
font12 = types.KeyboardButton('–®—Ä–∏—Ñ—Ç 12')

correct_font = ['–®—Ä–∏—Ñ—Ç 1', '–®—Ä–∏—Ñ—Ç 2', '–®—Ä–∏—Ñ—Ç 3', '–®—Ä–∏—Ñ—Ç 4', '–®—Ä–∏—Ñ—Ç 5', '–®—Ä–∏—Ñ—Ç 6', '–®—Ä–∏—Ñ—Ç 7', '–®—Ä–∏—Ñ—Ç 8', '–®—Ä–∏—Ñ—Ç 9', '–®—Ä–∏—Ñ—Ç 10', '–®—Ä–∏—Ñ—Ç 11', '–®—Ä–∏—Ñ—Ç 12']

markup_fonts= types.ReplyKeyboardMarkup(resize_keyboard = True).add(font1, font2, font3, font4, font5, font6, font7, font8, font9, font10, font11, font12, item1)



# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Ñ–æ–Ω–∞
markup_backgrounds = types.ReplyKeyboardMarkup(resize_keyboard = True).add(item1)


# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –±–æ—Ç–∞
@bot.message_handler(commands = ['start'])
def welcome(message):
    global userid
    userid = message.from_user.id
    db = sqlite3.connect('users_settings.db')
    cursor = db.cursor()
    cursor.execute("SELECT userid FROM users WHERE userid = ?", [userid])
    if cursor.fetchone() is None:
        cursor.execute("INSERT INTO users(userid) VALUES(?)", [userid])
        db.commit()
    cursor.execute("SELECT userid FROM backgrounds WHERE userid = ?", [userid])
    if cursor.fetchone() is None:
        cursor.execute("INSERT INTO backgrounds(userid) VALUES(?)", [userid])
        db.commit()
    bot.send_message(message.chat.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, <b>{name}</b>!\n–Ø - <b>{bot}</b>, –ø–æ–∑–≤–æ–ª—è—é—â–∏–π –±—ã—Å—Ç—Ä–æ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–ª–µ–∑–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –µ–≥–æ –ª–∏—á–Ω—ã–º –Ω—É–∂–¥–∞–º –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ'
        .format(name = message.from_user.first_name, bot = bot.get_me().first_name), parse_mode = 'html', reply_markup = markup)


# –ù–∞—Å—Ç–∫—Ä–æ–π–∫–∏ –±–æ—Ç–∞
@bot.message_handler(content_types=['text'])
def settings(message):
    if message.text == "‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏":
        msg = bot.send_message(message.chat.id, '–£–∫–∞–∂–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä, –≤ –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –≤–Ω–µ—Å—Ç–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è:', reply_markup = markup_settings)
        bot.register_next_step_handler(msg, way)
    elif message.text == "‚ñ∂ –ó–∞–ø—É—Å–∫":
        Bot()
    elif message.text == "üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏":
        msg_settings = bot.send_message(message.chat.id, '–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ', reply_markup = markup_settings)
        bot.register_next_step_handler(msg_settings, way)
    else:
        bot.send_message(message.chat.id, '–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é ü•∫')



# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—É—Ç–µ–π –±–æ—Ç–∞
@bot.message_handler(content_types=['text'])
def way(message):
    if message.text == "üó∫ –£–∫–∞–∑–∞—Ç—å –≥–æ—Ä–æ–¥":
        msg_cities = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞: ', reply_markup = markup_cities)
        bot.register_next_step_handler(msg_cities, city_save)
    elif message.text == "‚åöÔ∏è –£–∫–∞–∑–∞—Ç—å –≤—Ä–µ–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π":
        msg_time = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∂–µ–ª–∞–µ–º–æ–µ –≤—Ä–µ–º—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: ', reply_markup = markup_time)
        bot.register_next_step_handler(msg_time, time_save)
    elif message.text == "üí¨ –ò–∑–º–µ–Ω–∏—Ç—å —à—Ä–∏—Ñ—Ç":
        msg_font = bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–µ—Ç–µ –∂–µ–ª–∞–µ–º—ã–π —à—Ä–∏—Ñ—Ç: ', reply_markup = markup_fonts)
        bot.register_next_step_handler(msg_font, font_save)
    elif message.text == "üñº –ò–∑–º–µ–Ω–∏—Ç—å —Ñ–æ–Ω":
        msg_background = bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∂–µ–ª–∞–µ–º—ã–π —Ñ–æ–Ω: ', reply_markup = markup_backgrounds)
        bot.register_next_step_handler(msg_background, background_save)
    elif message.text == "üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É":
        bot.send_message(message.chat.id, '–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª—ã–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É ', reply_markup = markup)
    elif message.text == "üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏":
        msg_settings = bot.send_message(message.chat.id, '–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ', reply_markup = markup_settings)
        bot.register_next_step_handler(msg_settings, way)
    else:
        msg_error = bot.send_message(message.chat.id, '–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é ü•∫', reply_markup = markup_settings)
        bot.register_next_step_handler(msg_error, way)


# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –≥–æ—Ä–æ–¥–∞
def city_save(message):
    try:
        if message.text == 'üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏':
            msg_settings = bot.send_message(message.chat.id, '–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ', reply_markup = markup_settings)
            bot.register_next_step_handler(msg_settings, way)
        else:
            place = message.text
            observation = mgr.weather_at_place(place)
            db = sqlite3.connect('users_settings.db')
            cursor = db.cursor()
            cursor.execute("SELECT userid FROM users WHERE userid = ?", [userid])
            if cursor.fetchone() is None:
                cursor.execute("INSERT INTO users(place) VALUES(?)", [place])
                db.commit()
            else:
                cursor.execute("UPDATE users SET place = ? WHERE userid = ?", [place, userid])
                db.commit()
            msg_update = bot.send_message(message.chat.id, '–ì–æ—Ä–æ–¥ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω—ë–Ω, –≤—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ', reply_markup = markup_settings)
            bot.register_next_step_handler(msg_update, way)
    except:
        city_error = bot.send_message(message.chat.id, '–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞! ', reply_markup = markup_cities)
        bot.register_next_step_handler(city_error, city_save)

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
def time_save(message):
    try:
        if message.text == 'üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏':
            msg_settings = bot.send_message(message.chat.id, '–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ', reply_markup = markup_settings)
            bot.register_next_step_handler(msg_settings, way)
        else:
            reset = message.text
            db = sqlite3.connect('users_settings.db')
            cursor = db.cursor()
            cursor.execute("SELECT userid FROM users WHERE userid = ?", [userid])
            if cursor.fetchone() is None:
                cursor.execute("INSERT INTO users(reset) VALUES(?)", [reset])
                db.commit()
            else:
                cursor.execute("UPDATE users SET reset = ? WHERE userid = ?", [reset, userid])
                db.commit()
            msg_update = bot.send_message(message.chat.id, '–í—Ä–µ–º—è —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ, –≤—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ', reply_markup = markup_settings)
            bot.register_next_step_handler(msg_update, way)
    except:
        time_error = bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏!' + '\n' + '–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –µ—â—ë —Ä–∞–∑:', reply_markup = markup_time)
        bot.register_next_step_handler(time_error, time_save)    

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —à—Ä–∏—Ñ—Ç–∞
def font_save(message):   
    if message.text == 'üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏':
        msg_settings = bot.send_message(message.chat.id, '–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ', reply_markup = markup_settings)
        bot.register_next_step_handler(msg_settings, way)
    elif message.text in correct_font:
        font = message.text
        db = sqlite3.connect('users_settings.db')
        cursor = db.cursor()
        cursor.execute("SELECT userid FROM users WHERE userid = ?", [userid])
        if cursor.fetchone() is None:
            cursor.execute("INSERT INTO users(font) VALUES(?)", [font])
            db.commit()
        else:
            cursor.execute("UPDATE users SET font = ? WHERE userid = ?", [font, userid])
            db.commit()
        msg_update = bot.send_message(message.chat.id, '–®—Ä–∏—Ñ—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω—ë–Ω, –≤—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ', reply_markup = markup_settings)
        bot.register_next_step_handler(msg_update, way)
    else:
        font_error = bot.send_message(message.chat.id, '–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —à—Ä–∏—Ñ—Ç' + '\n' + '–£–∫–∞–∂–∏—Ç–µ —à—Ä–∏—Ñ—Ç –µ—â—ë —Ä–∞–∑:', reply_markup = markup_fonts)
        bot.register_next_step_handler(font_error, font_save)


# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–æ–Ω–∞
@bot.message_handler(content_types=['text', 'photo', 'document'])
def background_save(message):
    if message.text == 'üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏':
        msg_settings = bot.send_message(message.chat.id, '–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ', reply_markup = markup_settings)
        bot.register_next_step_handler(msg_settings, way)
    else:
        background = message.photo
        with open(io.BytesIO(background), "rb") as photo:
            bot.send_photo(message.chat.id, photo)
        # with open("fon.png", "rb") as file:
            # cursor.execute("SELECT userid FROM backgrounds WHERE userid = ?", [userid])
            # if cursor.fetchone() is None:
               # cursor.execute("INSERT INTO backgrounds VALUES(?)", [file.read()])
               # db.commit()
            # else:
               # cursor.execute("UPDATE backgrounds SET background = ? WHERE userid = ?", [file.read(), userid])
               # db.commit()
        msg_update = bot.send_photo(message.chat.id, "{photo}".format(photo = bot.get_file(message.photo[0].file_id)), reply_markup = markup_settings)
        bot.register_next_step_handler(msg_update, way)

# –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –±–æ—Ç–∞
class Bot():
    pass




bot.polling(none_stop=True, interval=0)
